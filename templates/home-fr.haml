-extends "base.haml"
-load static
-load events_tags

-block title
  ❤ Hacker Agenda France ❤

-block h1_title
  Hacker Agenda France

-block content
  %div{style: "padding-bottom: 15px; padding-top: 10px"}
    %center
      %a#open_filter_tag_bar.button Personnaliser
      %span{style: "margin: 10px"} -
      -for filter in predefined_filters
        %a.button.secondary.predefined_filter{data-key: "{{ filter }}", id: "section_{{ filter }}"}= filter|capfirst
      %span{style: "margin: 10px"} -
      %a#rss.round.button.alert{href: "{% url 'events_rss' %}"}
        RSS
      %a#ics.round.button.success{href: "{% url 'events_ics' %}"}
        ICS (iCal)
      %a.round.button{href: "https://twitter.com/hackeragenda_be"}
        Twitter

  %dl.tabs.pill
    %dd.active
      %a{href: "#table"}
        Calendrier
    %dd
      %a{href: "#list"}
        Liste
    %dd
      %a{href: "#faq"}
        F.A.Q.

  %ul.tabs-content
    %li#tableTab.active
      #calendar

    %li#listTab
      #listFormat

    %li#faqTab
      %hr
      %h2 FAQ
      %ul
        %li
          %b Qu'est-ce ?
          %br
          %p.faq
            HackerAgenda sert à centraliser les événements qui peuvent intéresser les hackers en Belgique. Il récupère les informations en parsant les sites d’hackerspaces et autres associations technophiles. Vous pouvez trouver le code  sur
            %a{"href": "https://github.com/Psycojoker/hackeragenda"} Github
            .
            
          %p.faq
            Ce projet vise à encourager les membres d’une communauté à laquelle je tiens à interagir plus entre eux en aggrégeant tous les évènements géniaux qui se passent près de chez vous.
            .
        %li
          %b Ma merveilleuse organisation n’est pas répertoriée ! C’est skANDALOUSE !
          %p.faq
            Il est possible que je n’en connaisse pas l’existence ou que je n’ai pas trouvé la liste des événements sur le site (J’ai ajouté les organisations que je connais à Bruxelles ainsi que les hackerspaces listés sur hackerspaces.org/Belgium). Envoyez-moi 
            %a{"href": "mailto: brain at worlddomination.be"} un email 
            ou 
            %a{"href": "https://github.com/Psycojoker/hackeragenda/issues/new"} demandez le 
            avec les informations nécessaires (j’ai besoin d’un lien vers la page des événements, qui peuvent être extraits de manière structurée) ou mieux encore, 
            %a{"href": "https://github.com/Psycojoker/hackeragenda"} proposez du code
            .

        %li
          %b
            Format JSON
          %br
          %p.faq
            HackerAgenda accepte un format JSON simplifié pour ajouter les prochains événements d’une organisation.

          %p.faq
            Pour le moment, c’est une simple objet JSON, composé des clés :
            %ul
              %li "org" : Nom de l’organisation (obligatoire)
              %li "api" : Version de l’API: 0.1 pour le moment (obligatoire)
              %li "events" : Une liste d'objets évènements (obligatoire)
          %p.faq
            Chaque objet événement doit contenir les clés suivantes :
            %ul
              %li "title" : Nom de l’événement
              %li "url" : Lien vers la page web de l'évènement
              %li "start" : Date de début de l’événement, en ISO8601
          %p.faq
            Il peut en outre contenir des informations supplémentaires:
            %ul
              %li "end" : Date de fin de l’événement, en ISO8601
              %li "all_day" : L’événement dure-t-il toute la journée ?
              %li "location" : Adresse lisible par un humain pour votre événement

          %p.faq
              Exemple :
              %pre.panel
                :plain
                  "org": "afypro",
                  "api" : 0.1,
                  "events" : [
                          {
                             "title": "Small conf",
                             "start": "2012-05-23 12:00",
                             "end": "2012-05-23 18:23",
                             "all_day": false,
                             "url": "http://..."
                          },
                          {
                             "title": "Marvelous conference",
                             "start": "2012-05-23 12:00",
                             "all_day": true,
                             "location": "123 avenue du soleil",
                             "url": "http://..."
                          }
                      ]
                  }
        %li
          %b Quels genres d’événements peuvent être ajoutés ?
          %p.faq
            À peu près tout ce que peut intéresser les hackers. Une partie de mon planning mental est : des rencontres autour des 
            %span{"style": "text-decoration: line-through;"} langages de programmation/framework/outils/sysadmin/réseau/matériel 
            (fait), LUGs, hacktivisme, fablabs pour lesquels j’ai trouvé un agenda et peut-être des bons événements plus courants. J’aime découvrir de nouvelles activités, n’hésitez pas à m’envoyer les événements qui pourraient convenir et qui ne sont pas encore dedans.

        %li
          %b Puis-je soumettre un événement ?
          %p.faq
            Non. Je suis extrêmement fainéant et n’ai aucune envie de faire de la modération. Mais si vous avez une organisation 
            %b dont les évènements sont disponibles sur internet
            qui n’est pas dans l’HackerAgenda mais qui y aurait sa place selon vous, contactez-moi (c’est encore mieux si vous savez implémenter l’API, voir plus bas). Une autre solution est de construire un autre site où les gens pourraient soumettre leurs événements et où vous feriez la modération. Je serais heureux de l’inclure dans l’HackerAgenda (et si vous êtes prêt à travailler avec Django je serai ravi de vous aider).

        %li
          %b Mon organisation a une drôle de couleur.
          %p.faq
            %span{"style": "text-decoration: line-through;"} C'est toi la drôle de couleur.
            J’ai essayé de choisir une couleur proche du thème du site internet, qui n’était pas encore prise par une autre organisation ou en la tirant au hasard (sauf pour UrLab, j’aime le rose). Si votre couleur ne vous plaît pas, 
            %a{"href": "https://github.com/Psycojoker/hackeragenda/issues/new"} ouvrez un rapport de bug
            ou allez directement éditer
            %a{"href": "https://github.com/Psycojoker/hackeragenda/blob/master/events/management/commands/fetch_events.py"} le bout de code qui la concerne
            .

        %li
          %b Il y a-t-il une API ?
          %p.faq
            Oui, vous pouvez récupérer tous les événements 
            %a{"href": "/events/api/event/?format=json"} ici
            . Si vous souhaitez jouer directement avec les données utilisées par le calendrier, (qui est 
            %a{"href": "http://arshaw.com/fullcalendar/"}fullcalendar
            ), utilisez 
            %a{"href": "{% url 'events_json' %}"} ce lien
            .
        %li
          %b Pourquoi tant de ❤❤❤ ?
          %p.faq
            Parce que LOVE.


  %center
    %a{href: "http://thecatapi.com/"}
      %img{src: "http://thecatapi.com/api/images/get?format=src&size=small"}

  %hr

-block footer
  %span.love
    %a{'href': '{% url "administration_dashboard" %}'}
      Admin
  %br
  %span.love
    Fait avec
    %span{"style": "color: pink"}❤
    par
    %a{href: "http://worlddomination.be"} Bram
    avec l'aide de
    %a{href: "https://github.com/Psycojoker/hackeragenda/graphs/contributors"} contributeurs géniaux
  %br
  %span.love
    %a{href: "https://github.com/Psycojoker/hackeragenda"} code source

-block filter_bar
  -include "filter_bar-fr.haml"

-block javascript
  %script{type: "text/javascript", src: "{% static 'fullcalendar/fullcalendar.js' %}"}
  %script{type: "text/javascript", src: "{% static 'Snap.js/snap.min.js' %}"}
  :javascript
    get_url_values = function(){
      // the current sate of javascript is miserable
      var search_string = window.location.search.substring(1).split('&');
      var to_return = {source: [], exclude_source: [], tag: [], exclude_tag: [], section: undefined};
      for(var i = 0; i < search_string.length; i++){
        var KeyValuePair = search_string[i].split('=');
        if (to_return[KeyValuePair[0]] === undefined) {
          console.log("Warning: shouldn't have this key: " + KeyValuePair[0])
          to_return[KeyValuePair[0]] = [];
        }
        to_return[KeyValuePair[0]].push(KeyValuePair[1]);
      }

      if (to_return.section === undefined) {
        delete to_return.section;
      }

      return to_return;
    };

    node_to_filter_name = function(node) {
      return node.textContent.trim().toLowerCase().replace(/ /g, "_");
    }

    list_remove = function(list, item) {
      var index = list.indexOf(item);
      if (index != -1) {
        list.splice(index, 1);
      }
      return list
    }

    set_active = function(node) {
      if (node.attributes.data !== undefined) {
        node.style = node.attributes.data.nodeValue;
      } else {
        $(node).addClass("active_filter");
      }
      $(node).removeClass("inactive_filter");
      $(node).removeClass("excluding_filter");
      node.attributes["data-state"] = "active";
    }

    set_inactive = function(node) {
      node.style = "";
      $(node).addClass("inactive_filter");
      $(node).removeClass("excluding_filter");
      node.attributes["data-state"] = "inactive";
    }

    set_exclude = function(node) {
      if (node.attributes.data !== undefined) {
        node.style = "";
      } else {
        $(node).removeClass("active_filter");
      }
      $(node).removeClass("inactive_filter");
      $(node).addClass("excluding_filter");
      node.attributes["data-state"] = "exclude";
    }

    update_filter_bar = function(filter_values) {
      var sources = document.getElementById("sources").children;
      for (var i = 0; i < sources.length; i++) {
        var item = node_to_filter_name(sources[i]);
        var node = sources[i].children[0];
        if (filter_values.source.indexOf(item) != -1) {
          set_active(node);
        } else if (filter_values.exclude_source.indexOf(item) != -1) {
          set_exclude(node);
        } else {
          set_inactive(node);
        }
      }

      var tags = document.getElementById("tags").children;
      for (var i = 0; i < tags.length; i++) {
        var item = node_to_filter_name(tags[i]);
        var node = tags[i].children[0];
        if (filter_values.tag.indexOf(item) != -1) {
          set_active(node);
        } else if (filter_values.exclude_tag.indexOf(item) != -1) {
          set_exclude(node);
        } else {
          set_inactive(node);
        }
      }
    };

    switch_filter_state = function(filter) {
      if (filter.attributes["data-state"] == "active") {
        set_exclude(filter);
        list_remove(current_filter_values[filter.attributes["data-type"].nodeValue], node_to_filter_name(filter));
        current_filter_values["exclude_" + filter.attributes["data-type"].nodeValue].push(node_to_filter_name(filter));
      } else if (filter.attributes["data-state"] == "inactive") {
        set_active(filter);
        current_filter_values[filter.attributes["data-type"].nodeValue].push(node_to_filter_name(filter));
      } else { // exclude
        set_inactive(filter);
        list_remove(current_filter_values["exclude_" + filter.attributes["data-type"].nodeValue], node_to_filter_name(filter));
      }
      update_global_filtering_state();
    }

    update_global_filtering_state = function() {
      update_url();
      update_events();
      update_rss_ics_urls();
      $(".predefined_filter").removeClass("success");
      $(".predefined_filter").addClass("secondary");
    }

    update_rss_ics_urls = function() {
      document.getElementById("rss").href = "{% url 'events_rss' %}?" + $.param(current_filter_values, true);
      document.getElementById("ics").href = "{% url 'events_ics' %}?" + $.param(current_filter_values, true);
    }

    update_rss_ics_urls_with_section = function() {
      document.getElementById("rss").href = "{% url 'events_rss' %}?section=" + section;
      document.getElementById("ics").href = "{% url 'events_ics' %}?section=" + section;
    }

    update_events = function() {
      $("#calendar").fullCalendar("refetchEvents");
      update_list_format();
    }

    update_url = function() {
      window.history.pushState({}, "", "?" + $.param(current_filter_values, true));
    }

    update_list_format = function() {
      $.get("events/events.html?" + $.param(current_filter_values, true), function(data) {
        document.getElementById("listFormat").innerHTML = data;
      })
    }

    predefined_filters = {{ predefined_filters_json|safe }};

    activate_filtering_section = function(dom_prefiltered_button) {
      section = dom_prefiltered_button.attributes["data-key"].value;
      current_filter_values = predefined_filters[section];
      update_filter_bar(current_filter_values);
      update_global_filtering_state();
      window.history.pushState({}, "", "?section=" + section);
      $(dom_prefiltered_button).removeClass("secondary");
      $(dom_prefiltered_button).addClass("success");
      update_rss_ics_urls_with_section(section);
    }

    $(document).ready(function() {
      url_content = get_url_values();

      if (window.location.search == "") {
        $(".predefined_filter").first().removeClass("secondary");
        $(".predefined_filter").first().addClass("success");

        current_filter_values = {
          "source": predefined_filters["default"].source,
          "exclude_source": predefined_filters["default"].exclude_source,
          "tag": predefined_filters["default"].tag,
          "exclude_tag": predefined_filters["default"].exclude_tag
        };
      } else if (url_content.section === undefined) {
        current_filter_values = url_content;
        console.log(current_filter_values);
      } else {
        // this function will set current_filter_values, this is very ugly
        activate_filtering_section(document.getElementById("section_" + url_content.section[0]));
      }

      update_filter_bar(current_filter_values);
      update_list_format();
      update_rss_ics_urls();

      $(".filters").find("a").click(function(from) {
        switch_filter_state(from.currentTarget);
      });

      $(".predefined_filter").click(function(from) {
        activate_filtering_section(from.currentTarget)
      })

      $("#calendar").fullCalendar({
        firstDay: 1,
        events: {
          url: '{% url 'events_json' %}',
          data: function() { return current_filter_values },
          traditional: true,
        },
        header: {
          left: 'prev,next today',
          center: 'title',
          right: 'month,agendaWeek,agendaDay'
        },
      });

      // try to hackhisly style things
      $(".fc-header")[0].style.border = "none";
      $(".fc-button").each(function(_, i) { i.className = "button secondary" });
      $(".fc-text-arrow").each(function(_, i) { i.style.fontSize = "11px"} );

      var snapper = new Snap({
        element: document.getElementById('content'),
        disable: 'right'
      });
      $('#open_filter_tag_bar').click(function() {
        if (snapper.state().state == 'closed')
          snapper.open('left');
        else
          snapper.close('left');
      })
    })
  :css
    .faq {
      margin-left: 14px;
    }

    .active_filter {
      color: black;
    }

    .inactive_filter {
      background-color: none;
      color: #AAAAAA;
    }

    .excluding_filter {
      text-decoration: line-through;
      color: black;
    }

    .fc-event-time {
      font-size: 12px;
    }

    .fc-event-title {
      font-size: 12px;
    }
